package com.withearth.tumbler.controller;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.imageio.ImageIO;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageConfig;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;

@Controller
public class makeQR {

	public String makeQR(HttpServletRequest request,
			             HttpSession session,
			             String storeName) throws WriterException, IOException {
		
		String root = request.getSession().getServletContext().getRealPath("resources"); //현재 서비스가 돌아가고 있는 서블릿 경로의 resource폴더 찾기
		String savePath = root +"\\qrCodes\\"; //파일 경로
		
		//파일 경로가 없으면 생성하기
		File file = new File(savePath);
		if(!file.exists()) {
			file.mkdirs();
		}
		
		//링크로 할 URL 주소 
		String url="localhostL8080/"; //String url="localhostL8080/"+storename
		
		//링크 생성값
		String codeurl = new String(url.getBytes("UTF-8"),"ISO-8859-1");
		
		//QR코드 색상값
		int qrcodeColor = 0xFF2e4e96;
		//QR코드 배경색 값
		int backgroundColor = 0xFFFFFFFF;
		
		QRCodeWriter qrCodeWriter = new QRCodeWriter();
        //                                                                     width, height 값 지정
        BitMatrix bitMatrix = qrCodeWriter.encode(codeurl, BarcodeFormat.QR_CODE,200, 200);

		MatrixToImageConfig matrixToImageConfig = new MatrixToImageConfig(qrcodeColor,backgroundColor); 
	    BufferedImage bufferedImage = MatrixToImageWriter.toBufferedImage(bitMatrix,matrixToImageConfig); 
	    
	    //파일 이름에 저장한 날짜를 포함해주기 위해 date생성
	    SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss"); 
	    String fileName=sdf.format(new Date()) +storeName; 
	    
	    //파일 경로, 파일 이름 , 파일 확장자에 맡는 파일 생성
	    File temp =  new File(savePath+fileName+".png");  
	    
	    // ImageIO를 사용하여 파일쓰기 
	    ImageIO.write(bufferedImage, "png",temp); 
		
	    //리턴은 사용자가 원하는 값을 리턴한다. 
	    //작성자는 QRCode 파일의 이름을 넘겨주고 싶었음.
		return fileName+".png"; 
	}

}
